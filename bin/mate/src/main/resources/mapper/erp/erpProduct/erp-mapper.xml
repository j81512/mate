<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="erp">


	<resultMap type="Product" id="productMap"></resultMap>
	
	<select id="searchInfo" resultMap="productMap">
		select p.product_no,
			p.product_name,
			p.category,
			s.emp_id,
			p.reg_date,
			nvl(s.stock,0) stock
		from product p left join stock s
		on (p.product_no = s.product_no)
		<where>
			<if test="category != null and category != ''">
				p.category = #{category}
			</if>
			<if test="select != null and select.equals('product_name')">
				<if test="search != null and !search.isempty">
					and p.product_name like '%' || #{search} || '%'
				</if>
			</if>
			<if test="select != null and select.equals('product_no')">
				<if test="search != null and !search.isempty">
					and p.product_no = #{sNum}
				</if>
			</if>
			<if test="lNum != null">
				and s.stock <![CDATA[ <= ]]> #{lNum}
			</if>
			<if test="uNum!= null">
				and s.stock <![CDATA[ >= ]]> #{uNum}
			</if>
			
			
		</where>
	</select>
	
	<select id="orderProduct" resultMap="productMap">
		select p.product_no,
			p.product_name,
			p.category,
			p.manufacturer_id,
			p.reg_date,
			s.stock,
			s.emp_id branchEmp 
		from product p left join stock s
		on (p.product_no = s.product_no)
		<where>
			p.product_no = #{productNo} 
			<if test="eId != null and !eId.isempty">
				and s.emp_id = #{eId}
			
			</if>
		</where>
	</select>
	
	<select id="selectProductOne" resultType="product">
 		select
 			*
 		from
 			product 
 		where
 			product_no = #{ productNo }
 	</select>
 	
 	<select id="selectProductMainImages" resultType="productMainImages">
 		select
 			*
 		from
 			product_main_images
 		where
 			product_no = #{ productNo }
 	</select>
 	
 	<select id="selectProductImages" resultType="productImages">
 		select
 			*
 		from
 			product_images
 		where
 			product_no = #{ productNo }
 	</select>
 	
 	<select id="selectRequsestList" resultType="requestLog">
 		select
			rl.request_no,
			rl.manufacturer_id,
			rl.amount,
			rl.confirm,
			rl.emp_id,
			p.product_name,
			p.category,
			p.price
		from
			request_log rl inner join
			product p 
		on 
			rl.product_no = p.product_no
		where 
			rl.manufacturer_id = #{empId} and
			rl.confirm not in 1 
		order by rl.request_no desc
 	</select>
 	
 	<select id="selectReceiveList" resultType="receive">
 		select
 			r.receive_no,
 			r.manufacturer_id,
 			r.confirm,
 			r.amount,
 			r.product_no,
 			r.emp_id,
 			p.product_name,
 			p.category,
 			p.price,
			(
			select 
				S.stock
			from 
				stock S
			where 
				emp_id = #{empId} and 
				S.product_no = P.product_no 
			) stock
		from          
   			receive R 
		inner join
 			product P
		on
 			R.product_no = P.product_no
		where 
			emp_id = #{empId} and
			r.confirm not in 1 
			
 	</select>
 	
	<insert id="productEnroll">
 		insert into 
 			product
 		values
 		(
 		seq_product_no.nextval,
 		 #{productName},
 		 default,
 		 #{category},
 		 #{content},
 		 #{price},
 		 #{manufacturerId},
 		 default
 		)
 		<selectKey order="AFTER" resultType="_int" keyProperty="productNo">
			select
				seq_product_no.currval 			
 			from
 				dual
 		</selectKey>
 	</insert>
 
 	
 	<insert id="productImageEnroll">
 		insert into
 			product_images
 		values
 		(
		seq_product_image_no.nextval,
		#{ renamedFilename },
		#{ productNo }
 		)
 	</insert>
 	

 	<insert id="productMainImagesEnroll">
 		insert into
 			product_main_images
 		values
 		(
 		seq_product_main_image_no.nextval,
 		#{ originalFilename },
 		#{ renamedFilename },
 		#{ productNo }
 		)
 	</insert>
 	
 	<update id="productUpdate">
 		update product
 			set
 		product_name = #{ productName },
 		category = #{ category },
 		content = #{ content },
 		price = #{ price }
 			where
 		product_no = #{ productNo }	
 	</update>
 	
 	
 	<delete id="productMainImagesDelete">
 		delete from
 			product_main_images
 		where
 			product_no = #{ productNo }
 	</delete>
 	
 	<delete id="productDelete">
 		delete from
 			product
 		where
 			product_no = #{ productNo }
 	</delete>

	<delete id="productImagesDelete">
		delete from
			product_images
		where
			product_no = #{ productNo }
	</delete>
	
	<select id="findEmpid" resultType="string">
 		select emp_id from product where product_no = #{productNo}
 	</select>
 	
 	<insert id="productOrder">
 		insert into request_log values (
 		seq_request_no.nextval,
 		#{empId},
 		#{stock},
 		default,
 		default,
 		#{productNo},
 		#{branchEmp}
 		)
 	</insert>
 	
 	<update id="updateRequestToApp">
 		update 
 			request_log
 		set
 			confirm = 1
 		where 
 			request_no = #{requestNo}
 		
 	</update>
 	
 	<update id="updateRequestToRef">
 		update 
 			request_log
 		set
 			confirm = -1
 		where 
 			request_no = #{requestNo}
 	</update>
 	
 	<update id="updateReceiveToApp">
 		update
 			receive
 		set
 			confirm = 1
 		where
 			receive_no = #{receiveNo}
 	</update>

	<update id="updateReceiveToRef">
		update
			receive
		set
			confirm = -1
		where
			receive_no = {receiveNo}
	</update>
</mapper>